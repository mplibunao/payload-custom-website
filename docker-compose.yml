services:
  mongo:
    image: mongo:latest
    ports:
      - 27017:27017
    volumes:
      - mongo_data:/data/db
    restart: '${DOCKER_RESTART_POLICY:-unless-stopped}'
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
  redis:
    image: redis:7.0.4-alpine3.16
    restart: '${DOCKER_RESTART_POLICY:-unless-stopped}'
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass redis_password
    volumes:
      - cache:/data
    deploy:
      resources:
        limits:
          cpus: '${DOCKER_REDIS_CPUS-0}'
          memory: '${DOCKER_REDIS_MEMORY-0}'
  imagor:
    image: shumc/imagor:latest
    volumes:
      - ./apps/web/media/assets/:/mnt/data
    restart: '${DOCKER_RESTART_POLICY:-unless-stopped}'
    environment:
      PORT: 8000
      IMAGOR_UNSAFE: 1
      # Image bomb prevention
      VIPS_MAX_RESOLUTION: 16800000
      VIPS_MAX_WIDTH: 4000
      VIPS_MAX_HEIGHT: 4000
      # Return optimized format if browser accept header includes it
      IMAGOR_AUTO_WEBP: 1
      IMAGOR_AUTO_AVIF: 1
      # set base url to only allow using our images
      HTTP_LOADER_BASE_URL: media/assets/

      FILE_LOADER_BASE_DIR: /mnt/data # enable file loader by specifying base dir

      FILE_STORAGE_BASE_DIR: /mnt/data # enable file storage by specifying base dir
      FILE_STORAGE_MKDIR_PERMISSION: 0755 # optional
      FILE_STORAGE_WRITE_PERMISSION: 0666 # optional

      FILE_RESULT_STORAGE_BASE_DIR: /mnt/data/result # enable file result storage by specifying base dir
      FILE_RESULT_STORAGE_MKDIR_PERMISSION: 0755 # optional
      FILE_RESULT_STORAGE_WRITE_PERMISSION: 0666 # optional
      IMAGOR_RESULT_STORAGE_PATH_STYLE: size # more flat results storage
      #DEBUG: 1
    ports:
      - '8000:8000'
    deploy:
      resources:
        limits:
          cpus: '${DOCKER_IMAGOR_CPUS-0}'
          memory: '${DOCKER_IMAGOR_MEMORY-0}'

volumes:
  mongo_data:
  cache:
