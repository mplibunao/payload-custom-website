diff --git a/dist/config/types.d.ts b/dist/config/types.d.ts
index a8a391698fed7d844e8511e0f5fe5bb9b518fc8c..175f525b598095e468830fa6a4fe9efa0298a95a 100644
--- a/dist/config/types.d.ts
+++ b/dist/config/types.d.ts
@@ -15,6 +15,7 @@ import { GlobalConfig, SanitizedGlobalConfig } from '../globals/config/types';
 import { PayloadRequest } from '../express/types';
 import { Where } from '../types';
 import { User } from '../auth/types';
+import type { PayloadLogger } from '../utilities/logger'
 type Email = {
     fromName: string;
     fromAddress: string;
@@ -81,6 +82,7 @@ export type InitOptions = {
      * See Pino Docs for options: https://getpino.io/#/docs/api?id=options
      */
     loggerOptions?: LoggerOptions;
+    logger?: PayloadLogger;
     loggerDestination?: DestinationStream;
     /**
      * Sometimes, with the local API, you might need to pass a config file directly, for example, serverless on Vercel
diff --git a/dist/payload.js b/dist/payload.js
index 8de02b9625c5a545c644ce26534c2b4487fdae1d..28d4b3adb9226c035574c3cd92ac7f070cb36dd1 100644
--- a/dist/payload.js
+++ b/dist/payload.js
@@ -149,7 +149,7 @@ class BasePayload {
      * @param options
      */
     async init(options) {
-        this.logger = (0, logger_1.default)('payload', options.loggerOptions, options.loggerDestination);
+        this.logger = options.logger ?? (0, logger_1.default)('payload', options.loggerOptions, options.loggerDestination);
         this.mongoURL = options.mongoURL;
         this.mongoOptions = options.mongoOptions;
         if (this.mongoURL) {